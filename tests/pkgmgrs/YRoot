AptPackage(
    'wget',
    package='wget'
)

AptPackage(
    'curl',
    package='curl',
    deps=':wget'
)

AptPackage(
    'apt-transport-https',
    package='apt-transport-https',
    deps=':curl'
)

CustomInstaller(
    'node',
    uri='https://deb.nodesource.com/setup_10.x',
    script='install-nodejs.sh',
    deps=':apt-transport-https',
    packaging_params={
        'set_env': {
            'FOO': 'BAR',
        }
    }
)

AptPackage(
    'ruby-run',
    package='ruby2.3',
    deps=':node'
)

AptPackage(
    'ruby-dev',
    package='ruby2.3-dev'
)

TargetGroup(
    'ruby',
    deps=[':ruby-run', ':ruby-dev'],
    packaging_params={
        'set_env': {
            'TEST': '1',
        },
        'semicolon_join_env': {
            'PATH': '/foo/bar',
        },
    }
)

PythonPackage(
    'flask',
    package='flask',
    version='1.0.2',
    pip='pip',
    deps=':ruby',
    packaging_params={
        'semicolon_join_env': {
            'PATH': '/ham',
        },
    }
)

NpmPackage(
    'leftpad',
    package='left-pad',
    deps=':flask'
)

GemPackage(
    'compass',
    package='compass',
    deps=':leftpad',
    packaging_params={
        'semicolon_join_env': {
            'PATH': '/spam',
        },
    }
)

PythonPackage(
    'gunicorn',
    package='gunicorn',
    deps=':compass',
    pip='pip'
)

ExtDockerImage(
    'python',
    image='python',
    tag='3'
)

DockerImage(
    'the-image',
    start_from=':python',
    docker_cmd='foo',
    build_user='root',
    run_user='root',
    deps=[
        ':gunicorn'
    ]
)

# TODO: support dynamic distro-based construction of the source string
AptRepository(
    'gcloud-repository',
    source='deb http://packages.cloud.google.com/apt cloud-sdk-stretch main',
    key='6A030B21BA07F4FB'
)

AptPackage(
    'gcloud',
    package='google-cloud-sdk',
    deps=':gcloud-repository'
)

DockerImage(
    'another-image',
    start_from=':the-image',
    deps=':gcloud'
)
